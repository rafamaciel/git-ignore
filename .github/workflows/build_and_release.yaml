name: Build and Release CLI

on:
  release:
    types:
      - created

jobs:
  build:
    name: Build CLI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.x # Use a versão do Go que você precisa

      - name: Build CLI
        run: go build -o git-ignore

      - name: Archive Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: git-ignore-${{ matrix.os }}
          path: git-ignore

  release:
    name: Create Release and Upload Artifacts
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.x # Use a versão do Go que você precisa

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: git-ignore-${{ matrix.os }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0 # Substitua pela sua tag de versão
          release_name: Release 1.0.0 # Substitua pelo nome do release
          draft: false
          prerelease: false

      - name: Upload Release Assets
        id: upload-release-assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./git-ignore
          asset_name: git-ignore-${{ matrix.os }}
          asset_content_type: application/octet-stream
